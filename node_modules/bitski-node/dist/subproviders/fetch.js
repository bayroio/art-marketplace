"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bitski_provider_1 = require("bitski-provider");
const https_1 = require("https");
class NodeFetchSubprovider extends bitski_provider_1.AuthenticatedFetchSubprovider {
    generateParameters(payload, accessToken) {
        const parameters = super.generateParameters(payload, accessToken);
        // Bitski's servers require TLS 1.2 or greater
        const agent = new https_1.Agent({
            secureProtocol: 'TLSv1_2_method',
        });
        parameters.agent = agent;
        return parameters;
    }
}
exports.NodeFetchSubprovider = NodeFetchSubprovider;
//# sourceMappingURL=fetch.js.map