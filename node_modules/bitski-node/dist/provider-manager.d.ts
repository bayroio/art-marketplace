import BitskiNodeProvider from './provider';
/**
 * A wrapper around Bitski providers for convenient use with Truffle.
 *
 * Background:
 * This is very useful because when you pass a custom provider to Truffle via a
 * function in the config, it executes that function many times during execution,
 * which will cause you to create a brand new provider for every request.
 * This caches a single provider for every network, which reduces the memory
 * footprint, and vastly speeds up execution. It also shares an access token provider
 * amongst all providers, which means that if you switch networks, it should also be
 * very quick.
 */
export declare class ProviderManager {
    private credential;
    private cachedProviders;
    private tokenProvider;
    constructor(credential: string, secret: string);
    getProvider(networkName?: string, additionalHeaders?: object): BitskiNodeProvider;
}
