(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Represents an error that is received from the server
     * You can access the response code via the code property, and the URI from the requestURI property.
     * The retried property will indicate whether or not the request failed after multiple tries.
     */
    class ServerError extends Error {
        constructor(message, code, requestURI, retried = false) {
            super(message);
            this.name = 'ServerError';
            // Maintains proper stack trace for where our error was thrown (only available on V8)
            if (Error.captureStackTrace) {
                Error.captureStackTrace(this, ServerError);
            }
            this.code = code;
            this.requestURI = requestURI;
            this.retried = retried;
        }
    }
    exports.ServerError = ServerError;
});
//# sourceMappingURL=server-error.js.map