import { FetchSubprovider } from '@bitski/provider-engine';
import { AccessTokenProvider } from '../auth/access-token-provider';
export declare class AuthenticatedFetchSubprovider extends FetchSubprovider {
    protected authenticatedMethods: string[];
    protected accessTokenProvider: AccessTokenProvider;
    protected defaultHeaders: object;
    constructor(rpcUrl: string, debug: boolean, accessTokenProvider: AccessTokenProvider, defaultHeaders?: object);
    handleRequest(payload: any, next: any, end: any): void;
    handleAuthenticatedRequest(payload: any, next: any, end: any): void;
    handleUnauthenticatedRequest(payload: any, next: any, end: any): void;
    protected requiresAuthentication(payload: any): boolean;
    protected generateParameters(payload: any, accessToken?: string): object;
    protected sendRequest(parameters: object, next: any, end: any): void;
    private isErrorRetriable;
    private isUnauthorizedError;
}
