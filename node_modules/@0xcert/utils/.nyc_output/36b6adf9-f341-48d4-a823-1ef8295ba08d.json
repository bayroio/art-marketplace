{"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/index.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":8,"1":8,"2":8,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":8},"b":{"0":[8,0]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/index.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/index.ts"],"names":[],"mappings":";;;;;AAAA,qCAAgC;AAChC,mCAA8B;AAC9B,sCAAiC;AACjC,wCAAmC;AACnC,0CAAqC;AACrC,0CAAqC;AACrC,yCAAoC;AACpC,wCAAmC","sourcesContent":["export * from './methods/fetch';\nexport * from './methods/sha';\nexport * from './methods/keccak';\nexport * from './methods/to-float';\nexport * from './methods/to-integer';\nexport * from './methods/to-seconds';\nexport * from './methods/to-string';\nexport * from './methods/to-tuple';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"256c68c1747cfd84251833dda018ce8470ee5768","contentHash":"b5ef550049130df050a9a92fef553df8ed2a61f119953449a23fc14f7e960372"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/fetch.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/fetch.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":13,"column":4},"end":{"line":28,"column":7}},"14":{"start":{"line":14,"column":8},"end":{"line":27,"column":9}},"15":{"start":{"line":15,"column":12},"end":{"line":15,"column":69}},"16":{"start":{"line":15,"column":59},"end":{"line":15,"column":67}},"17":{"start":{"line":17,"column":13},"end":{"line":27,"column":9}},"18":{"start":{"line":18,"column":12},"end":{"line":23,"column":13}},"19":{"start":{"line":19,"column":16},"end":{"line":19,"column":96}},"20":{"start":{"line":19,"column":81},"end":{"line":19,"column":94}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":28}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":78}},"23":{"start":{"line":26,"column":68},"end":{"line":26,"column":76}},"24":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"fetchJson","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":18}},"loc":{"start":{"line":12,"column":34},"end":{"line":29,"column":1}},"line":12},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":43},"end":{"line":13,"column":44}},"loc":{"start":{"line":13,"column":56},"end":{"line":28,"column":5}},"line":13},"9":{"name":"(anonymous_9)","decl":{"start":{"line":15,"column":52},"end":{"line":15,"column":53}},"loc":{"start":{"line":15,"column":59},"end":{"line":15,"column":67}},"line":15},"10":{"name":"(anonymous_10)","decl":{"start":{"line":19,"column":74},"end":{"line":19,"column":75}},"loc":{"start":{"line":19,"column":81},"end":{"line":19,"column":94}},"line":19},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":61},"end":{"line":26,"column":62}},"loc":{"start":{"line":26,"column":68},"end":{"line":26,"column":76}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":14,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":27,"column":9}},{"start":{"line":14,"column":8},"end":{"line":27,"column":9}}],"line":14},"6":{"loc":{"start":{"line":17,"column":13},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":13},"end":{"line":27,"column":9}},{"start":{"line":17,"column":13},"end":{"line":27,"column":9}}],"line":17}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":2,"14":2,"15":0,"16":0,"17":2,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":2,"8":2,"9":0,"10":1,"11":1},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[0,2],"6":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/fetch.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/fetch.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,SAAsB,SAAS,CAAC,IAAI,EAAE,OAAQ;;QAC5C,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAQ,MAAc,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;SACnE;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5C,IAAI;gBACF,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACjF;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;SACnE;IACH,CAAC;CAAA;AAZD,8BAYC","sourcesContent":["/**\n * Universal fetch method reads remote or local JSON file.\n * @param path URL or local path.\n */\nexport async function fetchJson(path, options?): Promise<any> {\n  if (typeof window !== 'undefined') {\n    return (window as any).fetch(path, options).then((r) => r.json());\n  } else if (path.lastIndexOf('http', 0) !== 0) {\n    try { // UI with SSR sometimes can't find `fs` module, but it's not needed\n      return require('fs').promises.readFile(path, 'utf8').then((d) => JSON.parse(d));\n    } catch (e) {\n      return null;\n    }\n  } else {\n    return require('node-fetch')(path, options).then((r) => r.json());\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f29fa5635517358f4fc7b2be6bf8ebfc44b1b7a","contentHash":"9af2aba0f579baabbe04f2d69414d00044b2e856a31e3d53183ff0f949a88cf2"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/sha.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/sha.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":13,"column":4},"end":{"line":23,"column":7}},"14":{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},"15":{"start":{"line":15,"column":30},"end":{"line":15,"column":80}},"16":{"start":{"line":16,"column":31},"end":{"line":16,"column":93}},"17":{"start":{"line":17,"column":30},"end":{"line":17,"column":68}},"18":{"start":{"line":18,"column":12},"end":{"line":18,"column":84}},"19":{"start":{"line":18,"column":40},"end":{"line":18,"column":73}},"20":{"start":{"line":21,"column":12},"end":{"line":21,"column":92}},"21":{"start":{"line":25,"column":0},"end":{"line":25,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"sha","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":12}},"loc":{"start":{"line":12,"column":28},"end":{"line":24,"column":1}},"line":12},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":43},"end":{"line":13,"column":44}},"loc":{"start":{"line":13,"column":56},"end":{"line":23,"column":5}},"line":13},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":33},"end":{"line":18,"column":34}},"loc":{"start":{"line":18,"column":40},"end":{"line":18,"column":73}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},{"start":{"line":14,"column":8},"end":{"line":22,"column":9}}],"line":14}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":2,"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":2,"21":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":2,"8":2,"9":0},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/sha.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/sha.ts"],"names":[],"mappings":";;;;;;;;;;;AAKA,SAAsB,GAAG,CAAC,IAAY,EAAE,OAAe;;QACrD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,MAAM,SAAS,GAAG,IAAK,MAAc,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC9E,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YACzD,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzE;aAAM;YACL,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjF;IACH,CAAC;CAAA;AATD,kBASC","sourcesContent":["/**\n * Converts a message into SHA256 hash string.\n * @param bits Number of bits (e.g. 256).\n * @param message Text message.\n */\nexport async function sha(bits: number, message: string) {\n  if (typeof window !== 'undefined') {\n    const msgBuffer = new (window as any)['TextEncoder']('utf-8').encode(message);\n    const hashBuffer = await window['crypto'].subtle.digest(`SHA-${bits}`, msgBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => (`00${b.toString(16)}`).slice(-2)).join('');\n  } else {\n    return require('crypto').createHash(`sha${bits}`).update(message).digest('hex');\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e2ff2870d9ebcd3f28bd566d4c711b05d19d2f0","contentHash":"65f90c9930209312ca64ad0472cd7687625596ee121b5cfc0f65785d8a9f5505"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/keccak.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/keccak.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":33}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{"0":{"name":"keccak256","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/keccak.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/keccak.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAKzC,SAAgB,SAAS,CAAC,KAAU;IAClC,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AAFD,8BAEC","sourcesContent":["import * as Hash from 'eth-lib/src/hash';\n\n/**\n * Generates keccak256 hash.\n */\nexport function keccak256(input: any) {\n  return Hash.keccak256(input);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0d98156ff9babbc9d9b1c4843329f41bbc44352","contentHash":"c9e27717027ae6a461d6b29ddda5b0db9689b9e739439735b247fda98345c7bc"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-float.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-float.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":37}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}}},"fnMap":{"0":{"name":"toFloat","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":16}},"loc":{"start":{"line":3,"column":22},"end":{"line":5,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":36}},"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":31}},{"start":{"line":4,"column":35},"end":{"line":4,"column":36}}],"line":4}},"s":{"0":1,"1":7,"2":1},"f":{"0":7},"b":{"0":[7,3]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-float.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-float.ts"],"names":[],"mappings":";;AAGA,SAAgB,OAAO,CAAC,GAAW;IACjC,OAAO,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC;AAFD,0BAEC","sourcesContent":["/**\n * Converts number to float.\n */\nexport function toFloat(val: number) {\n  return parseFloat(`${val}`) || 0;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0a0d7129d2c83a1b8738941ab822734a3baa763","contentHash":"7cb162f69c414898cc01f6536a7b0cd3cb2a520a06755efd5315730a03f125f5"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-integer.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-integer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":12,"column":5}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":17}},"3":{"start":{"line":7,"column":9},"end":{"line":12,"column":5}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":17}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"fnMap":{"0":{"name":"toInteger","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":24},"end":{"line":13,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":12,"column":5}},{"start":{"line":4,"column":4},"end":{"line":12,"column":5}}],"line":4},"1":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":64}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":31}},{"start":{"line":4,"column":35},"end":{"line":4,"column":64}}],"line":4},"2":{"loc":{"start":{"line":7,"column":9},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":9},"end":{"line":12,"column":5}},{"start":{"line":7,"column":9},"end":{"line":12,"column":5}}],"line":7},"3":{"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":53}},"type":"binary-expr","locations":[{"start":{"line":7,"column":13},"end":{"line":7,"column":37}},{"start":{"line":7,"column":41},"end":{"line":7,"column":53}}],"line":7},"4":{"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":38}},"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":33}},{"start":{"line":11,"column":37},"end":{"line":11,"column":38}}],"line":11}},"s":{"0":1,"1":10,"2":1,"3":9,"4":1,"5":8,"6":1},"f":{"0":10},"b":{"0":[1,9],"1":[10,4],"2":[1,8],"3":[9,2],"4":[8,5]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-integer.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-integer.ts"],"names":[],"mappings":";;AAGA,SAAgB,SAAS,CAAC,GAA8B;IACtD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE;QAC5D,OAAO,CAAC,CAAC;KACV;SAAM,IAAI,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,EAAE;QACnD,OAAO,CAAC,CAAC;KACV;SAAM;QACL,OAAO,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;KAChC;AACH,CAAC;AARD,8BAQC","sourcesContent":["/**\n * Converts numeric values to integer.\n */\nexport function toInteger(val: number | string | boolean) {\n  if (typeof val === 'number' && val > Number.MAX_SAFE_INTEGER) {\n    return 0;\n  } else if (typeof val === 'boolean' && val === true) {\n    return 1;\n  } else {\n    return parseInt(`${val}`) || 0;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"69f305abb88924fdc9f0e09d476143384806f0a3","contentHash":"dad180386b54a8fde04103d825394ba3594c68de2a2bd560195f14d141fc55df"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-seconds.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-seconds.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":68}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{"0":{"name":"toSeconds","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":33},"end":{"line":5,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":67}},"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":62}},{"start":{"line":4,"column":66},"end":{"line":4,"column":67}}],"line":4}},"s":{"0":1,"1":7,"2":1},"f":{"0":7},"b":{"0":[7,4]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-seconds.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-seconds.ts"],"names":[],"mappings":";;AAGA,SAAgB,SAAS,CAAC,YAAoB;IAC5C,OAAO,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AAClE,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Converts time in milliseconds to the appropriate ethereum timestamp.\n */\nexport function toSeconds(milliseconds: number) {\n  return parseInt(`${parseFloat(`${milliseconds}`) / 1000}`) || 0;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0dd9c81640e2241401b9796767538e26675c8c4","contentHash":"75ff9c3167e6a057c7832ebd40f32999ab42c1a9287d1cbebb41bd3965a671a2"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-string.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-string.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":69}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}}},"fnMap":{"0":{"name":"toString","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":17}},"loc":{"start":{"line":3,"column":23},"end":{"line":5,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":68}},"type":"cond-expr","locations":[{"start":{"line":4,"column":47},"end":{"line":4,"column":61}},{"start":{"line":4,"column":64},"end":{"line":4,"column":68}}],"line":4},"1":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":44}},"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":23}},{"start":{"line":4,"column":27},"end":{"line":4,"column":44}}],"line":4}},"s":{"0":1,"1":8,"2":1},"f":{"0":8},"b":{"0":[6,2],"1":[8,7]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-string.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-string.ts"],"names":[],"mappings":";;AAGA,SAAgB,QAAQ,CAAC,GAAQ;IAC/B,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACnE,CAAC;AAFD,4BAEC","sourcesContent":["/**\n * Converts a value to string.\n */\nexport function toString(val: any) {\n  return val !== null && val !== undefined ? val.toString() : null;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2fde884c2d04ea98db7f6d49d922f9c37983027e","contentHash":"c62fca9fcd5a4d8bd1f165dda11140db14908ac2e437832a77cc736f64128419"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-tuple.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-tuple.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":18}},"3":{"start":{"line":7,"column":19},"end":{"line":7,"column":21}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":13}},"5":{"start":{"line":9,"column":4},"end":{"line":26,"column":7}},"6":{"start":{"line":10,"column":8},"end":{"line":24,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":40}},"8":{"start":{"line":13,"column":13},"end":{"line":24,"column":9}},"9":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"10":{"start":{"line":15,"column":26},"end":{"line":15,"column":28}},"11":{"start":{"line":16,"column":12},"end":{"line":19,"column":15}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":44}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":21}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":30}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":31}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":12}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":18}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":26}}},"fnMap":{"0":{"name":"toTuple","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":16}},"loc":{"start":{"line":3,"column":22},"end":{"line":28,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":29},"end":{"line":9,"column":30}},"loc":{"start":{"line":9,"column":36},"end":{"line":26,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":27},"end":{"line":16,"column":28}},"loc":{"start":{"line":16,"column":35},"end":{"line":19,"column":13}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},{"start":{"line":4,"column":4},"end":{"line":6,"column":5}}],"line":4},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":24,"column":9}},{"start":{"line":10,"column":8},"end":{"line":24,"column":9}}],"line":10},"2":{"loc":{"start":{"line":13,"column":13},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":13},"end":{"line":24,"column":9}},{"start":{"line":13,"column":13},"end":{"line":24,"column":9}}],"line":13}},"s":{"0":1,"1":7,"2":0,"3":7,"4":7,"5":7,"6":15,"7":6,"8":9,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":9,"16":15,"17":7,"18":1},"f":{"0":7,"1":15,"2":0},"b":{"0":[0,7],"1":[6,9],"2":[0,9]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-tuple.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-utils/src/methods/to-tuple.ts"],"names":[],"mappings":";;AAIA,SAAgB,OAAO,CAAC,GAAG;IACzB,IAAI,CAAC,CAAC,GAAG,YAAY,MAAM,CAAC,EAAE;QAC5B,OAAO,EAAE,CAAC;KACX;IAED,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QAC7B,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,MAAM,EAAE;YAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;aAAM,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;YAClC,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,MAAM,KAAK,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;gBACpB,KAAK,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,EAAE,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SACnB;aAAM;YACL,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAzBD,0BAyBC","sourcesContent":["/**\n * Transforms an object into web3 tuple type.\n * @param obj Web3 structure as object.\n */\nexport function toTuple(obj) {\n  if (!(obj instanceof Object)) {\n    return [];\n  }\n\n  const output = [];\n  let i = 0;\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] instanceof Object) {\n      output[i] = toTuple(obj[k]);\n    } else if (obj[k] instanceof Array) {\n      let j1 = 0;\n      const temp1 = [];\n      obj[k].forEach((ak) => {\n        temp1[j1] = toTuple(obj[k]);\n        j1++;\n      });\n      output[i] = temp1;\n    } else {\n      output[i] = obj[k];\n    }\n    i++;\n  });\n\n  return output;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9bac9b62dc3f4f2ccc469c251e85fc0c2b7cffb0","contentHash":"72bec121ce1abe46e579a5eabd3129d3bc6c1fcd01dfcaef985cd6f4bb37d891"}}