{"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/index.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":2,"1":12,"2":12,"3":1,"4":1,"5":1},"f":{"0":2},"b":{"0":[12,0]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/index.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/index.ts"],"names":[],"mappings":";;;;;AAAA,uDAAkD;AAClD,qCAAgC","sourcesContent":["export * from '@0xcert/ethereum-generic-provider';\nexport * from './core/provider';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"206f8c602a88bcbf60d14f7deb09d5d8ccefdf44","contentHash":"1a3a2fea35419928fedc8e1e64c077b698f15650f16eb1f9d631123205b49355"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/core/provider.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/core/provider.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":36},"end":{"line":12,"column":80}},"14":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"15":{"start":{"line":16,"column":8},"end":{"line":16,"column":32}},"16":{"start":{"line":17,"column":8},"end":{"line":17,"column":28}},"17":{"start":{"line":18,"column":8},"end":{"line":32,"column":9}},"18":{"start":{"line":19,"column":27},"end":{"line":19,"column":44}},"19":{"start":{"line":20,"column":12},"end":{"line":20,"column":84}},"20":{"start":{"line":21,"column":34},"end":{"line":21,"column":36}},"21":{"start":{"line":22,"column":12},"end":{"line":30,"column":13}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":57}},"23":{"start":{"line":25,"column":17},"end":{"line":30,"column":13}},"24":{"start":{"line":26,"column":16},"end":{"line":26,"column":63}},"25":{"start":{"line":29,"column":16},"end":{"line":29,"column":59}},"26":{"start":{"line":31,"column":12},"end":{"line":31,"column":69}},"27":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"28":{"start":{"line":38,"column":8},"end":{"line":38,"column":45}},"29":{"start":{"line":41,"column":8},"end":{"line":44,"column":56}},"30":{"start":{"line":47,"column":8},"end":{"line":59,"column":11}},"31":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"32":{"start":{"line":49,"column":16},"end":{"line":49,"column":29}},"33":{"start":{"line":51,"column":12},"end":{"line":51,"column":39}},"34":{"start":{"line":52,"column":12},"end":{"line":52,"column":81}},"35":{"start":{"line":52,"column":75},"end":{"line":52,"column":79}},"36":{"start":{"line":53,"column":12},"end":{"line":56,"column":14}},"37":{"start":{"line":54,"column":16},"end":{"line":54,"column":38}},"38":{"start":{"line":55,"column":16},"end":{"line":55,"column":71}},"39":{"start":{"line":57,"column":12},"end":{"line":57,"column":64}},"40":{"start":{"line":58,"column":12},"end":{"line":58,"column":24}},"41":{"start":{"line":62,"column":8},"end":{"line":68,"column":11}},"42":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"43":{"start":{"line":64,"column":16},"end":{"line":64,"column":28}},"44":{"start":{"line":66,"column":12},"end":{"line":66,"column":41}},"45":{"start":{"line":67,"column":12},"end":{"line":67,"column":24}},"46":{"start":{"line":71,"column":8},"end":{"line":76,"column":11}},"47":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"48":{"start":{"line":73,"column":16},"end":{"line":73,"column":28}},"49":{"start":{"line":75,"column":12},"end":{"line":75,"column":42}},"50":{"start":{"line":79,"column":8},"end":{"line":79,"column":49}},"51":{"start":{"line":82,"column":0},"end":{"line":82,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":25},"end":{"line":33,"column":5}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":32},"end":{"line":36,"column":5}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":18},"end":{"line":39,"column":5}},"line":37},"10":{"name":"(anonymous_10)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":45,"column":5}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":13},"end":{"line":60,"column":5}},"line":46},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":47},"end":{"line":47,"column":48}},"loc":{"start":{"line":47,"column":60},"end":{"line":59,"column":9}},"line":47},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":68},"end":{"line":52,"column":69}},"loc":{"start":{"line":52,"column":75},"end":{"line":52,"column":79}},"line":52},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":34},"end":{"line":53,"column":35}},"loc":{"start":{"line":53,"column":40},"end":{"line":56,"column":13}},"line":53},"15":{"name":"(anonymous_15)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":14},"end":{"line":69,"column":5}},"line":61},"16":{"name":"(anonymous_16)","decl":{"start":{"line":62,"column":47},"end":{"line":62,"column":48}},"loc":{"start":{"line":62,"column":60},"end":{"line":68,"column":9}},"line":62},"17":{"name":"(anonymous_17)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":23},"end":{"line":77,"column":5}},"line":70},"18":{"name":"(anonymous_18)","decl":{"start":{"line":71,"column":47},"end":{"line":71,"column":48}},"loc":{"start":{"line":71,"column":60},"end":{"line":76,"column":9}},"line":71},"19":{"name":"(anonymous_19)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":25},"end":{"line":80,"column":5}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":18,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":32,"column":9}},{"start":{"line":18,"column":8},"end":{"line":32,"column":9}}],"line":18},"6":{"loc":{"start":{"line":22,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":30,"column":13}},{"start":{"line":22,"column":12},"end":{"line":30,"column":13}}],"line":22},"7":{"loc":{"start":{"line":25,"column":17},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":17},"end":{"line":30,"column":13}},{"start":{"line":25,"column":17},"end":{"line":30,"column":13}}],"line":25},"8":{"loc":{"start":{"line":41,"column":16},"end":{"line":44,"column":54}},"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":34}},{"start":{"line":42,"column":15},"end":{"line":42,"column":31}},{"start":{"line":43,"column":15},"end":{"line":43,"column":29}},{"start":{"line":44,"column":15},"end":{"line":44,"column":54}}],"line":41},"9":{"loc":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},{"start":{"line":48,"column":12},"end":{"line":50,"column":13}}],"line":48},"10":{"loc":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},{"start":{"line":63,"column":12},"end":{"line":65,"column":13}}],"line":63},"11":{"loc":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},{"start":{"line":72,"column":12},"end":{"line":74,"column":13}}],"line":72}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/core/provider.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-ethereum-bitski-frontend-provider/src/core/provider.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,iFAA+F;AAiG/F,MAAa,cAAe,SAAQ,2CAAe;IAgDjD,YAAmB,OAA8B;QAC/C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACtB,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;YACxE,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;gBAC1C,aAAa,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC;aAC1C;iBAAM,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,EAAE;gBAC9C,aAAa,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC;aAChD;iBAAM;gBACL,aAAa,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC;aAC5C;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC1D;IACH,CAAC;IAzCM,MAAM,CAAC,WAAW,CAAC,OAA8B;QACtD,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IA4CM,WAAW;QAChB,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;IACvC,CAAC;IAKM,UAAU;QACf,OAAO,CACL,IAAI,CAAC,WAAW,EAAE;eACf,CAAC,CAAC,IAAI,CAAC,SAAS;eAChB,CAAC,CAAC,IAAI,CAAC,OAAO;eACd,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,WAAW,CAC3C,CAAC;IACJ,CAAC;IAKY,MAAM;;YACjB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,OAAO,KAAK,CAAC;aACd;YAED,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,GAAG,GAAG,EAAE;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACzD,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAKY,OAAO;;YAClB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAKY,gBAAgB;;YAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;KAAA;IAOM,IAAI,CAAC,IAAS,EAAE,QAA4B;QACjD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;CACF;AAvID,wCAuIC","sourcesContent":["import { GatewayConfig, GenericProvider, SignMethod } from '@0xcert/ethereum-generic-provider';\n\n/**\n * Network inteface for custom chain.\n */\nexport interface BitskiProviderNetwork {\n\n  /**\n   * Url to RPC provider.\n   */\n  rpcUrl: string;\n\n  /**\n   * Chain id.\n   */\n  chainId: number;\n}\n\n/**\n * Configuration interface for generic provider.\n */\nexport interface BitskiProviderOptions {\n\n  /**\n   * Type of signature that will be used in making claims etc.\n   */\n  signMethod?: SignMethod;\n\n  /**\n   * List of addresses where normal transfer not safeTransfer smart contract methods will be used.\n   */\n  unsafeRecipientIds?: string[];\n\n  /**\n   * Source where assetLedger compiled smart contract is located.\n   */\n  assetLedgerSource?: string;\n\n  /**\n   * Source where valueLedger compiled smart contract is located.\n   */\n  valueLedgerSource?: string;\n\n  /**\n   * Number of confirmations (blocks in blockchain after mutation is accepted) that are necessary to mark a mutation complete.\n   */\n  requiredConfirmations?: number;\n\n  /**\n   * Gateway configuration.\n   */\n  gatewayConfig?: GatewayConfig;\n\n  /**\n   * The number of milliseconds in which a mutation times out.\n   */\n  mutationTimeout?: number;\n\n  /**\n   * Bitski client ID.\n   */\n  clientId: string;\n\n  /**\n   * Bitski redirect url.\n   */\n  redirectUrl: string;\n\n  /**\n   * Ethereum network Bitski is connected to. Mainnet by default.\n   */\n  network?: string | BitskiProviderNetwork;\n\n  /**\n   * Gas price multiplier. Defaults to 1.1.\n   */\n  gasPriceMultiplier?: number;\n\n  /**\n   * Retry gas price multiplier. Defaults to 2.\n   */\n  retryGasPriceMultiplier?: number;\n\n  /**\n   * Sandbox mode. False by default.\n   */\n  sandbox?: Boolean;\n\n  /**\n   * Verbose mode. False by default.\n   */\n  verbose?: Boolean;\n}\n\n/**\n * Bitski RPC client.\n */\nexport class BitskiProvider extends GenericProvider {\n\n  /**\n   * Default options set from constructor.\n   */\n  protected _options: BitskiProviderOptions;\n\n  /**\n   * Bitski instance.\n   */\n  protected _bitski: any;\n\n  /**\n   * Bitski provider instance.\n   */\n  protected _provider: any;\n\n  /**\n   * Handles sign out.\n   */\n  private signOutHandler: any;\n\n  /**\n   * Returns a new provider instance.\n   * @param options HTTP provider options.\n   */\n  public static getInstance(options: BitskiProviderOptions): BitskiProvider {\n    return new this(options);\n  }\n\n  /**\n   * Class constructor.\n   * @param options.signMethod Optional setting of signature kind used in claims.\n   * @param options.unsafeRecipientIds Optional list of addresses where normal transfer not\n   * safeTransfer smart contract methods will be used.\n   * @param options.assetLedgerSource Optional source where assetLedger compiled smart contracts are\n   * located.\n   * @param options.valueLedgerSource Optional source where valueLedger compiled smart contracts are\n   * located.\n   * @param options.requiredConfirmations Optional number of confirmations that are necessary to\n   * mark a mutation complete.\n   * @param options.gatewayConfig Gateway configuration.\n   * @param options.mutationTimeout Optional number of milliseconds in which a mutation times out.\n   * @param options.clientId Required Bitski client ID.\n   * @param options.redirectUrl Required Bitski redirect url.\n   * @param options.network Optional name of Ethereum network or custom network object Bitski is\n   * connected to. Mainnet by default.\n   */\n  public constructor(options: BitskiProviderOptions) {\n    super(options);\n\n    this._options = options;\n    this._client = this;\n    if (this.isSupported()) {\n      const bitski = require('bitski');\n      this._bitski = new bitski.Bitski(options.clientId, options.redirectUrl);\n      const bitskiOptions = {};\n      if (typeof options.network === 'undefined') {\n        bitskiOptions['networkName'] = 'mainnet';\n      } else if (typeof options.network === 'string') {\n        bitskiOptions['networkName'] = options.network;\n      } else {\n        bitskiOptions['network'] = options.network;\n      }\n\n      this._provider = this._bitski.getProvider(bitskiOptions);\n    }\n  }\n\n  /**\n   * Is provider supported.\n   */\n  public isSupported() {\n    return typeof window !== 'undefined';\n  }\n\n  /**\n   * Checks if Bitski is connected.\n   */\n  public isSignedIn() {\n    return (\n      this.isSupported()\n      && !!this.accountId\n      && !!this._bitski\n      && this._bitski.authStatus === 'CONNECTED'\n    );\n  }\n\n  /**\n   * Signs into Bitski.\n   */\n  public async signIn() {\n    if (!this.isSupported()) {\n      return false;\n    }\n\n    await this._bitski.start();\n    this.accountId = await this.getAvailableAccounts().then((a) => a[0]);\n    this.signOutHandler = () => {\n      this.accountId = null;\n      this._bitski.removeSignOutHandler(this.signOutHandler);\n    };\n    this._bitski.addSignOutHandler(this.signOutHandler);\n    return this;\n  }\n\n  /**\n   * Signs out of Bitski.\n   */\n  public async signOut() {\n    if (!this.isSupported()) {\n      return null;\n    }\n    await this._bitski.signOut();\n    return this;\n  }\n\n  /**\n   * Gets the current signed in user. Will reject if no user is signed in.\n   */\n  public async getConnectedUser() {\n    if (!this.isSupported()) {\n      return null;\n    }\n    return this._bitski.getUser();\n  }\n\n  /**\n   * Sends the RPC call.\n   * @param data JSON-RPC ethereum call.\n   * @param callback Callback function to be executed.\n   */\n  public send(data: any, callback: (err, data) => any) {\n    this._provider.sendAsync(data, callback);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"399983ffec98919999dd11075e01e7527f190e5e","contentHash":"b2cf5b6f505ba8a22265f583378d0ac062a9235a9fe7c2e53d9838e236ab817c"}}