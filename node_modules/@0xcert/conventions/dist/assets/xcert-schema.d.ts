export declare type XcertSchema = {
    $schema: 'https://conventions.0xcert.org/json-schema.json';
    description: string;
    properties: {
        [key: string]: XcertSchemaPrimitive | XcertSchemaObject | XcertSchemaArray;
    };
    type: 'object';
    title: string;
    [key: string]: any;
} | {
    $schema: 'https://conventions.0xcert.org/json-schema.json';
    description: string;
    items: XcertSchemaPrimitive | XcertSchemaObject;
    type: 'array';
    title: string;
    [key: string]: any;
};
export interface XcertSchemaObject {
    description?: string;
    properties: {
        [key: string]: XcertSchemaPrimitive | XcertSchemaObject | XcertSchemaArray;
    };
    type: 'object';
    [key: string]: any;
}
export interface XcertSchemaArray {
    description?: string;
    items: XcertSchemaPrimitive | XcertSchemaObject;
    type: 'array';
    [key: string]: any;
}
export interface XcertSchemaPrimitive {
    description?: string;
    type: 'string' | 'number' | 'boolean';
    [key: string]: any;
}
export declare const xcertSchema: {
    $schema: string;
    title: string;
    definitions: {
        stringSchema: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
            };
        };
        numberSchema: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
            };
        };
        booleanSchema: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
            };
        };
        objectSchema: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                properties: {
                    patternProperties: {
                        '^.*$': {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
            };
        };
        arraySchema: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                items: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
        };
        simpleTypes: {
            enum: string[];
        };
    };
    type: string[];
    properties: {
        $schema: {
            type: string;
            format: string;
        };
        $evidence: {
            type: string;
            format: string;
        };
        title: {
            type: string;
        };
        description: {
            type: string;
        };
        type: {
            type: string;
            enum: string[];
        };
        items: {
            anyOf: {
                $ref: string;
            }[];
        };
        properties: {
            patternProperties: {
                '^.*$': {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
        };
    };
};
