{"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/86-base-asset.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/86-base-asset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":16,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/86-base-asset.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/86-base-asset.ts"],"names":[],"mappings":";;AAAA,qCAAsD;AAgBzC,QAAA,QAAQ,GAAG;IACtB,OAAO,EAAE,kDAAkD;IAC3D,WAAW,EAAE,mCAAmC;IAChD,UAAU,kBACR,SAAS,EAAE;YACT,WAAW,EAAE,mEAAmE;YAChF,IAAI,EAAE,QAAQ;SACf,EACD,OAAO,EAAE;YACP,WAAW,EAAE,wCAAwC;YACrD,IAAI,EAAE,QAAQ;SACf,IACE,qBAAY,CAAC,UAAU,CAC3B;IACD,KAAK,EAAE,YAAY;IACnB,IAAI,EAAE,QAAQ;CACf,CAAC","sourcesContent":["import { SchemaErc721, schemaErc721 } from './erc721';\n\n/**\n * Base asset data object interface.\n */\nexport interface Schema86 extends SchemaErc721 {\n  $evidence?: string;\n  $schema: string;\n  description?: string;\n  image?: string;\n  name?: string;\n}\n\n/**\n * Base asset data object JSON Schema.\n */\nexport const schema86 = {\n  $schema: 'https://conventions.0xcert.org/xcert-schema.json',\n  description: 'An abstract digital asset schema.',\n  properties: {\n    $evidence: {\n      description: 'A path to the evidence JSON with data needed to verify the asset.',\n      type: 'string',\n    },\n    $schema: {\n      description: 'A path to JSON Schema definition file.',\n      type: 'string',\n    },\n    ...schemaErc721.properties,\n  },\n  title: 'Base Asset',\n  type: 'object',\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8cfa527ab4660fec69fa3612573e1196863f9f3","contentHash":"b03bc6a0fb02b8d56bd27607a619f582b6b617b6e4df1720815b21dbb37cf63d"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/erc721.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/erc721.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":22,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/erc721.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/erc721.ts"],"names":[],"mappings":";;AA+Ba,QAAA,YAAY,GAAG;IAC1B,OAAO,EAAE,wCAAwC;IACjD,WAAW,EAAE,mCAAmC;IAChD,UAAU,EAAE;QACV,WAAW,EAAE;YACX,WAAW,EAAE,mJAAmJ;YAChK,IAAI,EAAE,QAAQ;SACf;QACD,KAAK,EAAE;YACL,WAAW,EAAE,mQAAmQ;YAChR,IAAI,EAAE,QAAQ;SACf;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,8GAA8G;YAC3H,IAAI,EAAE,QAAQ;SACf;KACF;IACD,KAAK,EAAE,cAAc;IACrB,IAAI,EAAE,QAAQ;CACf,CAAC","sourcesContent":["/**\n * ERC-721 unique asset data object interface.\n */\nexport interface SchemaErc721 {\n\n  /**\n   * A detailed description of an asset.\n   */\n  description?: string;\n\n  /**\n   * A valid URI pointing to a resource with mime type image/* representing the\n   * asset to which this NFT represents. Consider making any images at a width\n   * between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.\n   */\n  image?: string;\n\n  /**\n   * A name of an asset.\n   */\n  name?: string;\n\n  /**\n   * Any other key is allowed.\n   */\n  [key: string]: any;\n}\n\n/**\n * ERC-721 unique asset JSON Schema.\n */\nexport const schemaErc721 = {\n  $schema: 'http://json-schema.org/draft-07/schema',\n  description: 'An abstract digital asset schema.',\n  properties: {\n    description: {\n      description: 'A public property of type string that holds a detailed description of an asset. The property is always required and is limited to 255 characters.',\n      type: 'string',\n    },\n    image: {\n      description: 'A public property that can be a valid URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.',\n      type: 'string',\n    },\n    name: {\n      description: 'A public property that holds a name of an asset. This property is required and is limited to 255 characters.',\n      type: 'string',\n    },\n  },\n  title: 'Unique Asset',\n  type: 'object',\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"64adcf116ccb1b034b661ddbfbedb7612b60ac8b","contentHash":"b78230d48cba4e3e5838deb3f7601b85277b8f6796212df09d8681081a11ce3b"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/87-asset-evidence.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/87-asset-evidence.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":68,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/87-asset-evidence.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/87-asset-evidence.ts"],"names":[],"mappings":";;AAsBa,QAAA,QAAQ,GAAG;IACtB,OAAO,EAAE,kDAAkD;IAC3D,WAAW,EAAE,wBAAwB;IACrC,UAAU,EAAE;QACV,OAAO,EAAE;YACP,WAAW,EAAE,wCAAwC;YACrD,IAAI,EAAE,QAAQ;SACf;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,WAAW,EAAE,oCAAoC;wBACjD,KAAK,EAAE;4BACL,UAAU,EAAE;gCACV,KAAK,EAAE;oCACL,WAAW,EAAE,wDAAwD;oCACrE,IAAI,EAAE,SAAS;iCAChB;gCACD,IAAI,EAAE;oCACJ,WAAW,EAAE,wDAAwD;oCACrE,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,IAAI,EAAE,QAAQ;yBACf;wBACD,IAAI,EAAE,OAAO;qBACd;oBACD,IAAI,EAAE;wBACJ,WAAW,EAAE,4CAA4C;wBACzD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;wBACD,IAAI,EAAE,OAAO;qBACd;oBACD,MAAM,EAAE;wBACN,WAAW,EAAE,+BAA+B;wBAC5C,KAAK,EAAE;4BACL,UAAU,EAAE;gCACV,KAAK,EAAE;oCACL,WAAW,EAAE,yDAAyD;oCACtE,IAAI,EAAE,SAAS;iCAChB;gCACD,KAAK,EAAE;oCACL,WAAW,EAAE,mDAAmD;oCAChE,IAAI,EAAE,QAAQ;iCACf;gCACD,KAAK,EAAE;oCACL,WAAW,EAAE,qCAAqC;oCAClD,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,IAAI,EAAE,QAAQ;yBACf;wBACD,IAAI,EAAE,OAAO;qBACd;iBACF;aACF;YACD,IAAI,EAAE,OAAO;SACd;KACF;IACD,KAAK,EAAE,gBAAgB;IACvB,IAAI,EAAE,QAAQ;CACf,CAAC","sourcesContent":["/**\n * Asset evidence object interface.\n */\nexport interface Schema87 {\n  $schema: string;\n  data: {\n    nodes: {\n      index: number;\n      hash: string;\n    }[];\n    path: (string | number)[];\n    values: {\n      index: number;\n      value: string;\n      nonce: string;\n    }[];\n  }[];\n}\n\n/**\n * Asset evidence JSON Schema.\n */\nexport const schema87 = {\n  $schema: 'https://conventions.0xcert.org/xcert-schema.json',\n  description: 'Asset evidence schema.',\n  properties: {\n    $schema: {\n      description: 'A path to JSON Schema definition file.',\n      type: 'string',\n    },\n    data: {\n      description: 'Asset data evidence.',\n      items: {\n        type: 'object',\n        properties: {\n          nodes: {\n            description: 'A list of binary tree hash values.',\n            items: {\n              properties: {\n                index: {\n                  description: 'A number representing the hash index in a binary tree.',\n                  type: 'integer',\n                },\n                hash: {\n                  description: 'A string representing the hash value in a binary tree.',\n                  type: 'string',\n                },\n              },\n              type: 'object',\n            },\n            type: 'array',\n          },\n          path: {\n            description: 'A list of keys representing the JSON path.',\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          values: {\n            description: 'A list of binary tree values.',\n            items: {\n              properties: {\n                index: {\n                  description: 'A number representing the value index in a binary tree.',\n                  type: 'integer',\n                },\n                value: {\n                  description: 'A string representing the value in a binary tree.',\n                  type: 'string',\n                },\n                nonce: {\n                  description: 'A string representing value secret.',\n                  type: 'string',\n                },\n              },\n              type: 'object',\n            },\n            type: 'array',\n          },\n        },\n      },\n      type: 'array',\n    },\n  },\n  title: 'Asset evidence',\n  type: 'object',\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3852bb489754396ca357712d71cb715e678e86c8","contentHash":"de24037cc559caf93d81735cb21b514beba623cf314bfea1b857c929ba5fa85d"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/88-crypto-collectible.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/88-crypto-collectible.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":0},"end":{"line":10,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/88-crypto-collectible.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/88-crypto-collectible.ts"],"names":[],"mappings":";;AAAA,oDAAqD;AAgBxC,QAAA,QAAQ,GAAG;IACtB,OAAO,EAAE,kDAAkD;IAC3D,WAAW,EAAE,mCAAmC;IAChD,UAAU,oBACL,yBAAQ,CAAC,UAAU,CACvB;IACD,KAAK,EAAE,oBAAoB;IAC3B,IAAI,EAAE,QAAQ;CACf,CAAC","sourcesContent":["import { Schema86, schema86 } from './86-base-asset';\n\n/**\n * Crypto collectible asset data object interface.\n */\nexport interface Schema88 extends Schema86 {\n  $evidence?: string;\n  $schema: string;\n  description: string;\n  image: string;\n  name: string;\n}\n\n/**\n * Crypto collectible asset data object JSON Schema.\n */\nexport const schema88 = {\n  $schema: 'https://conventions.0xcert.org/xcert-schema.json',\n  description: 'An abstract digital asset schema.',\n  properties: {\n    ...schema86.properties,\n  },\n  title: 'Crypto Collectible',\n  type: 'object',\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3b0401cb19a39961e0efd2b7cf6cc894980fdfc2","contentHash":"317e24357e9a00a0429552fa121778e2b4791b21f3b7c13b1faeeab5e6b4b440"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/index.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":5,"1":5,"2":5,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":5},"b":{"0":[5,0]},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/index.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/index.ts"],"names":[],"mappings":";;;;;AAAA,4CAAuC;AACvC,gDAA2C;AAC3C,oDAA+C;AAC/C,qCAAgC;AAChC,2CAAsC","sourcesContent":["export * from './assets/86-base-asset';\nexport * from './assets/87-asset-evidence';\nexport * from './assets/88-crypto-collectible';\nexport * from './assets/erc721';\nexport * from './assets/xcert-schema';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5563df8bdc5277e6b315abd81cdbd215a9b0ce98","contentHash":"0da37a4c6c91da7fd0a822de8790d0b7d82214839403eaee54af711348675439"},"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/xcert-schema.ts":{"path":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/xcert-schema.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":127,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/xcert-schema.ts","sources":["/Users/xpepermint/Work/0xcert/repositories/framework/packages/0xcert-conventions/src/assets/xcert-schema.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Xcert JSON Schema interface.\n */\nexport type XcertSchema = {\n  $schema: 'https://conventions.0xcert.org/json-schema.json';\n  description: string;\n  properties: {\n    [key: string]: XcertSchemaPrimitive | XcertSchemaObject | XcertSchemaArray;\n  };\n  type: 'object';\n  title: string;\n  [key: string]: any;\n} | {\n  $schema: 'https://conventions.0xcert.org/json-schema.json';\n  description: string;\n  items: XcertSchemaPrimitive | XcertSchemaObject;\n  type: 'array';\n  title: string;\n  [key: string]: any;\n};\n\n/**\n * Xcert JSON Schema object interface.\n */\nexport interface XcertSchemaObject {\n  description?: string;\n  properties: {\n    [key: string]: XcertSchemaPrimitive | XcertSchemaObject | XcertSchemaArray;\n  };\n  type: 'object';\n  [key: string]: any;\n}\n\n/**\n * Xcert JSON Schema array interface.\n */\nexport interface XcertSchemaArray {\n  description?: string;\n  items: XcertSchemaPrimitive | XcertSchemaObject;\n  type: 'array';\n  [key: string]: any;\n}\n\n/**\n * Xcert JSON Schema primitive value interface.\n */\nexport interface XcertSchemaPrimitive {\n  description?: string;\n  type: 'string' | 'number' | 'boolean';\n  [key: string]: any;\n}\n\n/**\n * Xcert Xcert JSON Schema definition.\n */\nexport const xcertSchema = {\n  '$schema': 'http://json-schema.org/draft-07/schema#',\n  'title': 'Core schema meta-schema',\n  'definitions': {\n    'stringSchema': {\n      'type': 'object',\n      'properties': {\n        'type': {\n          'type': 'string',\n          'enum': ['string'],\n        },\n      },\n    },\n    'numberSchema': {\n      'type': 'object',\n      'properties': {\n        'type': {\n          'type': 'string',\n          'enum': ['number'],\n        },\n      },\n    },\n    'booleanSchema': {\n      'type': 'object',\n      'properties': {\n        'type': {\n          'type': 'string',\n          'enum': ['boolean'],\n        },\n      },\n    },\n    'objectSchema': {\n      'type': 'object',\n      'properties': {\n        'type': {\n          'type': 'string',\n          'enum': ['object'],\n        },\n        'properties': {\n          'patternProperties': {\n            '^.*$': {\n              'anyOf': [\n                { '$ref': '#/definitions/objectSchema' },\n                { '$ref': '#/definitions/arraySchema' },\n                { '$ref': '#/definitions/stringSchema' },\n                { '$ref': '#/definitions/numberSchema' },\n                { '$ref': '#/definitions/booleanSchema' },\n              ],\n            },\n          },\n        },\n      },\n    },\n    'arraySchema': {\n      'type': 'object',\n      'properties': {\n        'type': {\n          'type': 'string',\n          'enum': ['array'],\n        },\n        'items': {\n          'anyOf': [\n            { '$ref': '#/definitions/objectSchema' },\n            { '$ref': '#/definitions/stringSchema' },\n            { '$ref': '#/definitions/numberSchema' },\n            { '$ref': '#/definitions/booleanSchema' },\n          ],\n        },\n      },\n    },\n    'simpleTypes': {\n      'enum': [\n        'array',\n        'boolean',\n        'integer',\n        'null',\n        'number',\n        'object',\n        'string',\n      ],\n    },\n  },\n  'type': ['object', 'boolean'],\n  'properties': {\n    '$schema': {\n      'type': 'string',\n      'format': 'uri',\n    },\n    '$evidence': {\n      'type': 'string',\n      'format': 'uri',\n    },\n    'title': {\n      'type': 'string',\n    },\n    'description': {\n      'type': 'string',\n    },\n    'type': {\n      'type': 'string',\n      'enum': ['object'],\n    },\n    'items': {\n      'anyOf': [\n        { '$ref': '#/definitions/objectSchema' },\n        { '$ref': '#/definitions/stringSchema' },\n        { '$ref': '#/definitions/numberSchema' },\n        { '$ref': '#/definitions/booleanSchema' },\n      ],\n    },\n    'properties': {\n      'patternProperties': {\n        '^.*$': {\n          'anyOf': [\n            { '$ref': '#/definitions/objectSchema' },\n            { '$ref': '#/definitions/arraySchema' },\n            { '$ref': '#/definitions/stringSchema' },\n            { '$ref': '#/definitions/numberSchema' },\n            { '$ref': '#/definitions/booleanSchema' },\n          ],\n        },\n      },\n    },\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9eda5bd0c664590db348a616698f0c25ab5f6e39","contentHash":"e6e69600cd86de89e9378275155ca37d72c449fa88f19b942aabc6b2f3846c25"}}