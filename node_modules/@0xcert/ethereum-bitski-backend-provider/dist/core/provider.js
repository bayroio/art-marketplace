"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethereum_generic_provider_1 = require("@0xcert/ethereum-generic-provider");
const Bitski = require("bitski-node");
class BitskiProvider extends ethereum_generic_provider_1.GenericProvider {
    constructor(options) {
        super(options);
        this._options = options;
        this._client = this;
        this._provider = Bitski.getProvider(options.clientId, {
            network: typeof options.network === 'undefined' ? 'mainnet' : options.network,
            credentials: {
                id: options.credentialsId,
                secret: options.credentialsSecret,
            },
        });
    }
    static getInstance(options) {
        return new this(options);
    }
    isSupported() {
        return !!this._provider;
    }
    send(data, callback) {
        this._provider.sendAsync(data, callback);
    }
}
exports.BitskiProvider = BitskiProvider;
//# sourceMappingURL=provider.js.map