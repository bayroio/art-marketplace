"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const spec_1 = require("@hayspec/spec");
const cert_1 = require("../../../core/cert");
const schemas_1 = require("../helpers/schemas");
const spec = new spec_1.Spec();
spec.test('calculates imprint for complete data object', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const cert = new cert_1.Cert({
        schema: schemas_1.defaultSchema,
    });
    const imprint = yield cert.imprint(schemas_1.defaultData);
    ctx.is(imprint, '048c8f3384d5600792a4c8279d2c933fa43c26b81f2cab63462b72dd7488baad');
}));
exports.default = spec;
//# sourceMappingURL=imprint-instance-method.test.js.map