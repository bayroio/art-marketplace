"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const kitty_index_to_approved_1 = require("./kitty-index-to-approved");
const functionSignature = '0x081812fc';
const inputTypes = ['uint256'];
const outputTypes = ['address'];
function default_1(ledger, assetId) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const attrs = {
                to: ledger.id,
                data: functionSignature + ledger.provider.encoder.encodeParameters(inputTypes, [assetId]).substr(2),
            };
            const res = yield ledger.provider.post({
                method: 'eth_call',
                params: [attrs, 'latest'],
            });
            return ledger.provider.encoder.decodeParameters(outputTypes, res.result)[0];
        }
        catch (error) {
            ledger.provider.log(error);
            return kitty_index_to_approved_1.default(ledger, assetId);
        }
    });
}
exports.default = default_1;
//# sourceMappingURL=get-approved-account.js.map